{
    "contents" : "#cvm_function\r\n#Oct23_2018_TS_cvm_fun\r\n#Jan26_TS_new_cvm_fun3\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(ggplot2)\r\nlibrary(goftest)\r\nlibrary(fBasics)\r\n\r\n#1. cvm function redefine (from cvm.test)\r\n\r\nmy.cvm = function (x, null = \"punif\", ..., nullname){\r\n  xname <- deparse(substitute(x))\r\n  nulltext <- deparse(substitute(null))\r\n  if (is.character(null))\r\n    nulltext <- null\r\n  if (missing(nullname) || is.null(nullname)) {\r\n    reco <- recogniseCdf(nulltext)\r\n    nullname <- if (!is.null(reco))\r\n      reco\r\n    else paste(\"distribution\", sQuote(nulltext))\r\n  }\r\n  stopifnot(is.numeric(x))\r\n  x <- as.vector(x)\r\n  n <- length(x)\r\n  F0 <- if (is.function(null))\r\n    null\r\n  else if (is.character(null))\r\n    get(null, mode = \"function\")\r\n  else stop(\"Argument 'null' should be a function, or the name of a function\")\r\n  U <- F0(x, ...)\r\n\r\n  if (any(U < 0 | U > 1)){\r\n    omega2<-Inf\r\n    out <- list(statistic = omega2, p.value = NA,\r\n                method = \"Coerce into Inf when null function outside [0,1]\",\r\n                data.name = xname)\r\n    class(out) <- \"htest\"\r\n    return(out)\r\n  }\r\n  U <- sort(U)\r\n  x <- sort(x)\r\n  xmn = mean(x)\r\n  xsd = sd(x)\r\n  k <- seq_len(n)\r\n\r\n  omega2 <- 1/(12 * n) + sum(Heaviside(k,0.25*n)*(U - (2 * k - 1)/(2 * n))^2)\r\n  ## -- changed to 0.5\r\n  PVAL <- pCvM(omega2, n = n, lower.tail = FALSE)\r\n  names(omega2) <- \"omega2\"\r\n  METHOD <- c(\"Cramer-von Mises test of goodness-of-fit\",\r\n              paste(\"Null hypothesis:\",nullname))\r\n  extras <- list(...)\r\n  parnames <- intersect(names(extras), names(formals(F0)))\r\n  if (length(parnames) > 0) {\r\n    pars <- extras[parnames]\r\n    pard <- character(0)\r\n    for (i in seq_along(parnames))\r\n      pard[i] <- paste(parnames[i],\"=\", paste(pars[[i]], collapse = \" \"))\r\n    pard <- paste(\"with\", ngettext(length(pard), \"parameter\",\r\n                                   \"parameters\"), \"  \", paste(pard, collapse = \", \"))\r\n    METHOD <- c(METHOD, pard)\r\n  }\r\n  out <- list(statistic = omega2, p.value = PVAL, method = METHOD,\r\n              data.name = xname)\r\n  class(out) <- \"htest\"\r\n  return(out)\r\n}\r\n\r\n#2. multiple Nta categories\r\n\r\nnblgnfun2<-function(q,lp,sigma,nta){\r\n  lbd1<-1/(rlnorm(100000,meanlog=lp,sdlog=sigma))\r\n  ndist<-rnbinom(100000,nta,lbd1)\r\n  pvec=sapply(q,function(x){sum(x>=ndist,na.rm = TRUE)/length(ndist)})\r\n  return(pvec)\r\n}\r\n\r\nlownbfun3<-function(q,nta){\r\n  pvec=pnbinom(q,nta,0.7)\r\n  return(pvec)\r\n}\r\n\r\njointfun4<-function(q,lambda,lp,sigma,nta){\r\n  pvec=lambda*nblgnfun2(q,lp,sigma,nta)+(1-lambda)*lownbfun3(q,nta)\r\n  return(pvec)\r\n}\r\n",
    "created" : 1540316888019.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1753242202",
    "id" : "24D67432",
    "lastKnownWriteTime" : 1540316908,
    "path" : "~/TnSeq/FiTnEss/R/cvm_function.R",
    "project_path" : "R/cvm_function.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}